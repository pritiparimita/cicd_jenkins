pipeline {
    agent any

    environment {
        SONARQUBE_SCANNER_TOOL = tool 'sonar_scanner';
        DOCKERFILE = './Dockerfile'
        IMAGE_NAME = 'devopsitdefined/go_lang'
        IMAGE_TAG = 'latest'
        REGISTRY_CREDS = 'docker_devopsitdefined'
    }
    stages{
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    doGenerateSubmoduleConfigurations: false,
                    submoduleCfg: [],
                    userRemoteConfigs: [[credentialsId: 'git_hub', url: 'https://github.com/jaintpharsha/go_lang.git']]
                ])
            }
        }

        // stage('Linting') {
        //     steps {
        //         sh '''
        //             make clean lint
        //         '''
        //     }
        // }

        stage('Testing') {
            steps {
                sh '''
                    make clean test-backend
                '''
            }
        }

        stage('Code Analisys') {
            steps {
                script {
                    withSonarQubeEnv('sonar_server1') {
                        sh "${env.SONARQUBE_SCANNER_TOOL}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Build App') {
            steps {
                sh '''
                    make clean build
                '''
            }
        }

        stage('Build Image') {
            steps {
                script {
                    buildImage = docker.build("${env.IMAGE_NAME}:${env.BUILD_ID}", "-f ${env.DOCKERFILE} .")
                    docker.withRegistry('',"${env.REGISTRY_CREDS}") {
                        buildImage.push()
                    }
                }
            }
        }

    }
}
